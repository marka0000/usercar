{
    "openapi": "3.0.0",
    "info": {
        "title": "API for project usercar",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API server"
        }
    ],
    "paths": {
        "/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "carsAll",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Store a newly created resource in storage.",
                "operationId": "createCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "car",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update the specified resource in storage.",
                "operationId": "updateCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Remove the specified resource from storage.",
                "operationId": "deleteCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "usersAll",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store a newly created resource in storage.",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the specified resource in storage.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove the specified resource from storage.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CarVirtual": {
                "title": "Virtual User model",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name user",
                        "type": "string",
                        "format": "string"
                    },
                    "userId": {
                        "title": "userId",
                        "description": "User id",
                        "type": "integer",
                        "format": "integer"
                    }
                },
                "type": "object"
            },
            "UserVirtual": {
                "title": "Virtual User model",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name user",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users page"
        },
        {
            "name": "Cars",
            "description": "Cars page"
        }
    ]
}